/* Scss Document */

/* Box Shadow */
@mixin box-shadow($top, $left, $blur, $color, $inset: false) {
  @if $inset {
    -webkit-box-shadow:inset $top $left $blur $color;
    -moz-box-shadow:inset $top $left $blur $color;
    box-shadow:inset $top $left $blur $color;
  } @else {
    -webkit-box-shadow: $top $left $blur $color;
    -moz-box-shadow: $top $left $blur $color;
    box-shadow: $top $left $blur $color;
  }
}

/* Transition */
@mixin transition($transition){
     -webkit-transition: $transition;
     -moz-transition: $transition;
     -o-transition: $transition;
     transition: $transition;
}

/* Transform Rotate */
 @mixin rotate($degrees) {
	-webkit-transform: rotate($degrees);
	-moz-transform: rotate($degrees);
	-ms-transform: rotate($degrees);
	-o-transform: rotate($degrees);
	transform: rotate($degrees);
}

/* Width Calc */
@mixin calc($property, $expression) {
  #{$property}: -moz-calc(#{$expression});
  #{$property}: -webkit-calc(#{$expression});
  #{$property}: calc(#{$expression});
}

/*  Opacity Color */
@mixin color-opacity($color, $opacity: 0.3) {
  color: $color; /* The Fallback */
  color: rgba($color, $opacity);
}



/* Background Opacity Color */
@mixin background-opacity($color, $opacity: 0.3) {
    background: $color; /* The Fallback */
    background: rgba($color, $opacity);
}

/* Border Color */
@mixin background-opacity-border ($color, $opacity: 0.3) {
    border-color: $color; /* The Fallback */
    border-color: rgba($color, $opacity);
}

@mixin background-opacity-color ($color, $opacity: 0.3) {
    color: $color; /* The Fallback */
    color: rgba($color, $opacity);
}

@mixin border-radius($pixel) {
  border-radius: $pixel;
  -webkit-border-radius: $pixel;
     -moz-border-radius: $pixel; 
}



/* Animation Key Frame */

@mixin keyframes($name) {
  @-webkit-keyframes #{$name} {
    @content; 
  }
  @-moz-keyframes #{$name} {
    @content;
  }
  @-o-keyframes #{$name} {
    @content;
  }
  @keyframes #{$name} {
    @content;
  } 
}

@mixin animation ($delay, $duration, $animation, $direction: forward, $fillmode: fowards) {
    -webkit-animation-delay: $delay;
    -webkit-animation-duration: $duration;
    -webkit-animation-name: $animation;
    -webkit-animation-fill-mode: $fillmode;
    -webkit-animation-direction: $direction;

    -moz-animation-delay: $delay;
    -moz-animation-duration: $duration;
    -moz-animation-name: $animation;
    -moz-animation-fill-mode: $fillmode;
    -moz-animation-direction: $direction;

    animation-delay: $delay;
    animation-duration: $duration;
    animation-name: $animation;
    animation-fill-mode: $fillmode;
    animation-direction: $direction;
}


/* translate3d */
@mixin translate3d($x, $y, $z) {
  -webkit-transform: translate3d($x, $y, $z);
     -moz-transform: translate3d($x, $y, $z);
       -o-transform: translate3d($x, $y, $z);
          transform: translate3d($x, $y, $z);
}

/* translate */ 
@mixin translate($x, $y) {
  -webkit-transform: translate($x, $y);
     -moz-transform: translate($x, $y);
      -ms-transform: translate($x, $y);
       -o-transform: translate($x, $y);
          transform: translate($x, $y);
}

/* Background Image */
@mixin background-image-cover {
	background-repeat: no-repeat;
	background-size: cover;
	background-position: center center;
}

/* text shadow */
@mixin text-shadow($x1:2px, $y1:2px, $blur1:5px, $color1:black, $x2:null, $y2:null, $blur2:null, $color2:null){
  @if ($x2) {
   text-shadow: $x1 $y1 $blur1 $color1, $x2 $y2 $blur2 $color2; 
  }
  @else {
    text-shadow: $x1 $y1 $blur1 $color1; 
  }
}